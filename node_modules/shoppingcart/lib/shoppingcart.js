'use strict';

/**
 * Express application server handling all client requests
 *
 * RUN NOTES:
 * -------------------------
 * In this app, the server runs in one directory (server) and the client
 * application's "static content" is served from a different directory (client)
 * because we want to sandbox client access to the client directory and
 * prevent clients from accessing the purely server assets (like server.js).
 *
 * From terminal or console window, you might do the following:
 * > cd <projectDir>/server
 * > node server.js
 *
 * Then open browser to 'localhost:3000'
 *
 */
var express = require( 'express' )
    , bodyParser = require( 'body-parser' )
    , breezeRoutes = require( './breeze-routes' )
    , compress = require( 'compression' )
    , cors = require( 'cors' )
    , errorHandler = require( './errorHandler' )
    , favicon = require( 'static-favicon' )
    , fileServer = require( 'serve-static' )
    , http = require( 'http' )
    , logger = require( 'morgan' )
    , port = process.env["PORT"] || 3000;

module.exports = function ( app, passport, db ) {

    app.use( favicon() );
    app.use( logger( 'dev' ) );
    app.use( compress() );
    app.use( bodyParser() ); // both json & urlencoded

    // Support static file content
    // Consider 'st' module for caching: https://github.com/isaacs/st
    var debug = __dirname + '/../public/shoppingcart';
    app.use( fileServer( __dirname + '/../../public/shoppingcart' ) ); // was fileServer( process.cwd() )


    app.use( cors() );          // enable ALL CORS requests
    breezeRoutes.init( app ); // Configure breeze-specific routes for REST API

    // a test POST endpoint ... for the demo
    if ( app.get( 'env' ) === 'development' ) {
        app.post( '/ping', function ( req, res, next ) {
            console.log( req.body );
            res.send( 'pinged!!!' );
        });
    }

};